/* ==========================================================================
	 #Mixins
	 ========================================================================== */

/*
	 #Utilities
	 ========================================================================== */

@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

/*
	 #Typography
	 ========================================================================== */

@mixin font-sizer($font-size, $line-height, $viewport: all, $delimiter: min-max) {
	@if($viewport==all) {
		font-size: $font-size*1px;
		line-height: $line-height*1px;
	} @else {
		@include gs-media($viewport, $delimiter) {
			font-size: $font-size*1px;
			line-height: $line-height*1px;
		}
	}
}

// http://maximilianhoffmann.com/posts/better-font-rendering-on-osx
@mixin font-smoothing($value: on) {
	@if $value == on {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	@else {
			-webkit-font-smoothing: subpixel-antialiased;
			-moz-osx-font-smoothing: auto;
	}
}


// convert sizes
@function dim($target, $source, $unit: em) {
	@if unitless($target) { $target: 1px * $target; }
	@if unitless($source) { $source: 1px * $source; }

	@if $unit == em {
		@return ($target / $source) * 1em;
	}
	@else if $unit == percent {
		@return percentage($target / $source);
	}
	@else {
		@return ($target / $source)#{$unit};
	}
}

// shortcut to dim()
@function pxpc($target, $source) {
	@return dim($target, $source, percent);
}

// shortcut to dim()
@function pxem($target, $source: $default-font-size) {
	@return dim($target, $source, em);
}

/*
	 #Icons
	 ========================================================================== */

@mixin iosFocusFix() {
	position: absolute;
	left: 0;
	top: 0;
	display: block;
	width: 100%;
	height: 100%;
	max-height: none;
	max-width: none;
	opacity: 0;
}

/*
	#MEDIA QUERIES
	========================================================================== */

/* 
****** Example ******
.foo {
	@include onMobile {
		background-color: red;
	}
}

*/

@mixin onMobile() {
	@media only screen and (max-width: $mobile-breakpoint) {
		@content;
	}
}

@mixin untilTablet() {
	@media only screen and (max-width: $desktop-breakpoint) {
		@content;
	}
}

@mixin onTablet() {
	@media only screen and (min-width: $mobile-breakpoint) and (max-width: $desktop-breakpoint) {
		@content;
	}
}

@mixin fromTablet() {
	@media only screen and (min-width: $tablet-breakpoint) {
		@content;
	}
}

@mixin fromDesktop() {
	@media only screen and (min-width: $desktop-breakpoint) {
		@content;
	}
}

@mixin fromCinema() {
	@media only screen and (min-width: $cinema-breakpoint) {
		@content;
	}
}
